AWSTemplateFormatVersion : "2010-09-09"
Description: This template also deploys an Ubuntu 20.04 EC2 instance and installs NGINX.
             The configuration file and some sample conte are pulled from an s3 bucket  on boot.

Mappings:
  RegionMap:
    us-east-2:
      "ws": "ami-0233c2d874b811deb"
    US-west-2:
      "ws": "ami-0dc8f589abe99f538"

Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String
    Default: nginxDemo
  VpcId:
    Description: VPC ID of an existing VPC
    Type: String
  InstanceType:
    Type: String
    Description: Choosing  t2 micro because it is free
    Default: t2.micro
  KeyName:
    Description: SSH Keypair to login to the instance
    Type: AWS::EC2::KeyPair::KeyName
  SubnetID:
    Description: Subnet id to assign nginx to
    Type: String
  configUrl:
    Description: location of nginx.conf
    Type: String
  contentUrl:
    Description: location of index.html
    Type: String

Resources:

  nginxInstance:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: !FindInMap [ RegionMap, !Ref "AWS::Region", ws ]
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SecurityGroupIds:
        - !Ref WebSecurityGroup
        - !Ref SSHSecurityGroup
      SubnetId: !Ref SubnetID
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -ex
           amazon-linux-extras install epel
           yum update -y aws-cfn-bootstrap
           /opt/aws/bin/cfn-init -v -s ${AWS::StackName} -r nginxInstance --region ${AWS::Region}
          /opt/aws/bin/cfn-signal -e $? -s ${AWS::StackName} -r nginxInstance --region ${AWS::Region}


    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nginx: []
          commands:
            01_content:
              command: "curl $CONTENT >  /usr/share/nginx/html/index.html"
              env:
                CONTENT: !Ref contentUrl

            03_Start_NGINX:
              command: "service nginx restart"

      CreationPolicy:
        ResourceSignal:
          Timeout: PT5

  WebSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: Enable HTTPS access via user defined port
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80

  SSHSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22

Outputs:
  PubIP:
    Description: Public IP of instance
    Value: !GetAtt nginxInstance.PublicIp